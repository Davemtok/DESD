services:
  # "todo-app-api" service
  todo-app-api:
    # Name of the image to be built
    image: todo-app-api
    # Build the image from the Dockerfile in the current directory
    build:
      # Dockerfile is in the current directory
      context: .
      # Name of the Dockerfile
      dockerfile: Dockerfile
    # Restart policy
    restart: unless-stopped
    # Port mapping
    # This means that the port 8000 of the host will be mapped to the port 8000 of the container.
    ports:
      - "8000:8000"
    # Volume mapping
    volumes:
      - .:/app
    # Service dependencies
    depends_on:
      - db
    # Runtime command
    # Please check the Docker Tutorial 1 for more details.
    entrypoint: ["./todo-app-api-entrypoint.sh"]

  # "db" service
  db:
    # Name of the image to be pulled from Docker Hub.
    image: mysql:latest
    # Port mapping
    # This means that the port 5432 of the host will be mapped to the port 5432 of the container.
    ports:
      - "3307:3307"
    # Environment variables
    environment:
      MYSQL_ROOT_PASSWORD: 'davemtork'
      MYSQL_PASSWORD: 'davemtork'
      MYSQL_USER: 'user'
      MYSQL_DATABASE: 'todo'
      MYSQL_TCP_PORT: '3307'
    # Restart policy
    restart: unless-stopped
    # Volume mapping
    # This means that the volume named "db_data" will be mapped to the directory "/var/lib/postgresql/data" of the container.
    # The volume "db_data" will be created if it does not exist.
    volumes:
      - db_data:/var/lib/postgresql/data

# Volumes
volumes:
  # "db_data" volume definition
  db_data: